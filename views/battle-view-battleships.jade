extends layout

block container
	.row
		.col-xs-6
			h2 Battle Results
		.col-xs-6
			.btn-toolbar.pull-right
				if battle.parties[0].user.id.toString() !== battle.parties[1].user.id.toString()
					for party, botNo in battle.parties
						if party.user.id.toString() === user.id.toString()
							.btn-group
								a.btn.btn-primary(href='/my-challenges/new#bot=#{party.bot.id}&opponent=#{battle.parties[1-botNo].user.handle}') Re-challenge
					.btn-group &nbsp;&nbsp;
					
				.btn-group
					button.btn.btn-default.btn-play Re-play
				.btn-group
					button.btn.btn-default.btn-stop(style='display: none;') Pause

				.btn-group
					button.btn.btn-default.btn-fast.active Fast
					button.btn.btn-default.btn-slow Slow
					button.btn.btn-default.btn-slower Slower
					button.btn.btn-default.btn-step Step
	br

	.panel.panel-default
		.panel-body
			.row
				for party, botNo in battle.parties
					.col-md-6
						.alert(class='#{party.winner ? (party.user.id.toString() === user.id.toString() ? "alert-success" : "alert-danger") : ""}')
							if party.winner
								.pull-right
									i.fa.fa-trophy.fa-5x
							h4 #{party.bot.name}
							p
								small by #{party.user.name}

						table.table.table-bordered
							tbody
								tr
									td &nbsp;
									for c in 'ABCDEFGHIJ'
										td.text-center
											b #{c}
								for row, r in party.grid
									tr
										td.text-center
											b #{r+1}
										for cell in row
											td.text-center(class='#{cell.attacked ? (cell.pieceNo >= 0 ? "danger" : "warning") : ""}')
												if cell.pieceNo >= 0
													| #{cell.pieceNo}
												else
													| &nbsp;
						if party.user.id.toString() === user.id.toString()
							.btn-group.pull-right
								a.btn.btn-primary.btn-sm(href='/bots/#{party.bot.id}/edit') Improve
								button.btn.btn-default.btn-sm(type='button' data-toggle='modal' data-target='#mdlSource-#{botNo}') Source

						p.count(style='line-height: 30px;')
							span #{battle.moves.reduce(function(m, v) { return m + (v.okay && v.botNo === botNo ? 1 : 0) }, 0)}
							|  move(s)

		hr
		.panel-body
			.row
				.col-xs-6
					div(style='max-height: 192px; overflow-y: auto;')
						ul.ul-moves(style='padding: 2px; list-style: none;')
							for move in battle.moves.reverse()
								li(data-move='#{JSON.stringify(move)}')
									b #{battle.parties[move.botNo].bot.name}
									if move.okay
										|  attacked #{'ABCDEFGHIJ'[move.data.x]}#{move.data.y+1}
										|  &mdash;
										if move.data.baam
											|  and hit a <b>#{battle.parties[(move.botNo+1)%2].pieces[battle.parties[(move.botNo+1)%2].grid[move.data.y][move.data.x].pieceNo].kind}</b>!
										else
											|  and missed..

									else
										case move.fail
											when 'turn#attack erred'
												if battle.parties[move.botNo].user.id.toString() === user.id.toString()
													|  
													abbr(title='#{move.data.error}' data-toggle='tooltip') erred
													| .. battle forfeited
												else
													|  erred.. battle forfeited

											when 'turn#attack not-called'
												|  failed to attack.. battle forfeited
					br
					br
					p.text-right
						a(href='/battles/#{battle.id}.json') Export as JSON
				
				.col-xs-6
					if battle.parties[0].user.id.toString() !== battle.parties[1].user.id.toString()
						for party, botNo in battle.parties
							if party.user.id.toString() === user.id.toString()
								if otherBots && otherBots.length > 0
									h4 Other bots you may want to challenge
									ul
										for otherBot in otherBots
											li #{otherBot.name} 
												small  by&#032;
													a(href='/my-challenges/new#bot=#{party.bot.id}&opponent=#{otherBot.author.handle}') #{otherBot.author.name}

	for party, botNo in battle.parties
		if party.user.id.toString() !== user.id.toString()
			- continue

		.modal.fade(id='mdlSource-#{botNo}')
			.modal-dialog.modal-lg
				.modal-content
					.modal-header
						h4.modal-title Source: #{party.bot.name}

					.modal-body
						pre.pre-scrollable #{party.bot.code}

block append styles
	style(type='text/css').
		table td {
			width: 54px;
			-webkit-transition: background-color 100ms linear;
			-moz-transition: background-color 100ms linear;
			-o-transition: background-color 100ms linear;
			-ms-transition: background-color 100ms linear;
			transition: background-color 100ms linear;
		}

block append scripts
	script(type='text/javascript').
		(function() {
			var i = 0
			var moves = []

			$('.ul-moves li').each(function() {
				moves.unshift($(this).data('move'))
			})

			var playTimer = null

			function play() {
				$('.btn-play').hide()
				$('.btn-stop').show()

				if(i === moves.length) {
					i = 0
					stop()
					$('.ul-moves h4').fadeIn()
					return
				}
				if(i === 0) {
					$('.ul-moves h4').hide()
					$('table td').removeClass('warning danger')
					$('.count span').text(0)
				}

				$('.ul-moves li').slice(0, $('.ul-moves li').length-i).hide()
				$('.ul-moves li').slice($('.ul-moves li').length-i-1).show()

				var move = moves[i]
				var $td = $('table').eq((move.botNo+1)%2).find('tr').eq(move.data.y+1).find('td').eq(move.data.x+1)
				if(parseInt($td.text()) >= 0) {
					$td.addClass('danger')
				} else {
					$td.addClass('warning')
				}
				++i

				$('.count span').eq(move.botNo).text(parseInt($('.count span').eq(move.botNo).text())+1)

				var delay = 0
				switch(true) {
					case $('.btn-fast').hasClass('active'):
						delay = 10
						break

					case $('.btn-slow').hasClass('active'):
						delay = 100
						break

					case $('.btn-slower').hasClass('active'):
						delay = 500
						break

					case $('.btn-step').hasClass('active'):
						stop()
						return
				}
				playTimer = setTimeout(function() {
					play()
				}, delay)
			}

			function stop() {
				$('.btn-stop').hide()
				$('.btn-play').text(i === 0 ? 'Re-play' : ($('.btn-step').hasClass('active') ? 'Next' : 'Resume')).show()

				clearTimeout(playTimer)
			}

			$('.btn-play').click(function() {
				play()
			})
			$('.btn-stop').click(function() {
				stop()
			})

			$('.btn-fast, .btn-slow, .btn-slower, .btn-step').on('click', function() {
				$(this).addClass('active').siblings().removeClass('active')

				if($('.btn-step').hasClass('active')) {
					$('.btn-play').text('Next')
				} else {
					$('.btn-play').text('Re-play')
				}
			})
		})()
