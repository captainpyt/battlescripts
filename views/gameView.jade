extends layout

block container
	.page-header
		h1 Battle between "#{game.players[0].user}" and "#{game.players[1].user}"

	.panel.panel-default
		.panel-body
			.row
				.col-md-6
					button.btn.btn-primary.btn-play Play
					button.btn.btn-primary.btn-stop(style='display: none;') Stop
				.col-md-6.text-right
					.btn-group
						button.btn.btn-default.btn-fast.active Fast
						button.btn.btn-default.btn-slow Slow
						button.btn.btn-default.btn-slower Slower
						button.btn.btn-default.btn-step Step
			br

			.row
				for grid, playerNo in game.state.grids
					.col-md-6
						h3 #{game.players[playerNo].user}
						table.table.table-bordered
							tbody
								tr
									td &nbsp;
									for c in 'ABCDEFGHIJ'
										td.text-center
											b #{c}
								for row, r in grid
									tr
										td.text-center
											b #{r+1}
										for square in row
											td.text-center(class='#{square.attacked ? (square.pieceNo >= 0 ? "danger" : "warning") : ""}')
												if square.pieceNo >= 0
													| #{square.pieceNo}
												else
													| &nbsp;

		hr
		.panel-body
			ul.ul-records
				p
					h4 ridwan won!
				for record in game.state.records.reverse()
					li(data-record='#{JSON.stringify(record)}')
						b #{game.players[record.playerNo].user}
						|  #{record.event}
						case record.event
							when 'attacked'
								|  #{'ABCDEFGHIJ'[record.data.y]}#{record.data.x+1}
								|  &mdash;
								- var pieceNo = game.state.grids[(record.playerNo+1)%2][record.data.y][record.data.x].pieceNo
								if pieceNo >= 0
									|  and hit a <b>#{game.state.pieces[(record.playerNo+1)%2][pieceNo].kind}</b>!
								else
									|  and missed..

block append styles
	style(type='text/css').
		table td {
			width: 54px;
			-webkit-transition: background-color 100ms linear;
			-moz-transition: background-color 100ms linear;
			-o-transition: background-color 100ms linear;
			-ms-transition: background-color 100ms linear;
			transition: background-color 100ms linear;
		}

block append scripts
	script(type='text/javascript').
		(function() {
			var i = 0
			var records = []

			$('.ul-records li').each(function() {
				records.unshift($(this).data('record'))
			})

			var playTimer = null

			function play() {
				$('.btn-play').hide()
				$('.btn-stop').show()

				if(i === records.length) {
					i = 0
					stop()
					$('.ul-records h4').fadeIn()
					return
				}
				if(i === 0) {
					$('.ul-records h4').hide()
					$('table td').removeClass('warning danger')
				}

				$('.ul-records li').slice(0, $('.ul-records li').length-i).hide()
				$('.ul-records li').slice($('.ul-records li').length-i-1).show()

				var record = records[i]
				var $td = $('table').eq((record.playerNo+1)%2).find('tr').eq(record.data.y+1).find('td').eq(record.data.x+1)
				if(parseInt($td.text()) >= 0) {
					$td.addClass('danger')
				} else {
					$td.addClass('warning')
				}
				++i

				var delay = 0
				switch(true) {
					case $('.btn-fast').hasClass('active'):
						delay = 10
						break

					case $('.btn-slow').hasClass('active'):
						delay = 100
						break

					case $('.btn-slower').hasClass('active'):
						delay = 500
						break

					case $('.btn-step').hasClass('active'):
						stop()
						return
				}
				playTimer = setTimeout(function() {
					play()
				}, delay)
			}

			function stop() {
				$('.btn-stop').hide()
				$('.btn-play').show()

				clearTimeout(playTimer)
			}

			$('.btn-play').click(function() {
				play()
			})
			$('.btn-stop').click(function() {
				stop()
			})

			$('.btn-fast, .btn-slow, .btn-slower, .btn-step').on('click', function() {
				$(this).addClass('active').siblings().removeClass('active')

				if($('.btn-step').hasClass('active')) {
					$('.btn-play').text('Next')
				} else {
					$('.btn-play').text('Play')
				}
			})
		})()
